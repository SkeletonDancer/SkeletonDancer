<?php

namespace {{ namespace|normalizeNamespace }}\DependencyInjection;

{% block use_statements %}
use Symfony\Component\Config\FileLocator;
use Symfony\Component\Config\Resource\FileResource;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Extension\Extension;
{% if format == 'yml' -%}
use Symfony\Component\DependencyInjection\Loader\YamlFileLoader;
{% elseif format == 'xml' -%}
use Symfony\Component\DependencyInjection\Loader\XmlFileLoader;
{% endif %}
{% endblock use_statements %}

{% block class_definition %}
final class {{ extension_name }}Extension extends Extension
{% endblock class_definition %}
{
{% block class_body %}
    const EXTENSION_ALIAS = '{{ extension_alias }}';

    public function load(array $configs, ContainerBuilder $container)
    {
        $configuration = new Configuration(self::EXTENSION_ALIAS);
        $config = $this->processConfiguration($configuration, $configs);

        {% if format == 'yml' -%}
        $loader = new YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config/services/'));
        $loader->load('core.yml');
        {%- elseif format == 'xml' -%}
        $loader = new XmlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config/services/'));
        $loader->load('core.xml');
        {%- endif %}

    }

    public function getConfiguration(array $config, ContainerBuilder $container)
    {
        $configuration = new Configuration(self::EXTENSION_ALIAS);

        $r = new \ReflectionObject($configuration);
        $container->addResource(new FileResource($r->getFileName()));

        return $configuration;
    }

    public function getAlias()
    {
        return self::EXTENSION_ALIAS;
    }
{% endblock class_body %}
}
