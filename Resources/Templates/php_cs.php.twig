<?php
{% block php_use %}

{% if styleci_bridge %}
require_once __DIR__.'/vendor/sllh/php-cs-fixer-styleci-bridge/autoload.php';
{% endif %}
{% endblock php_use %}

{% block header %}
{% if license is not empty %}
$header = <<<EOF
{% block file_header %}
{{ include('Licenses/' ~ license|lower ~ '.txt.twig', { _block: 'header' })|trim }}
{% endblock file_header %}
EOF;

Symfony\CS\Fixer\Contrib\HeaderCommentFixer::setHeader($header);
{% endif %}
{% endblock header %}

{% block body %}
{% if styleci_bridge %}
$config = SLLH\StyleCIBridge\ConfigBridge::create()
    ->setUsingCache(true)
;
{% else %}
$config = Symfony\CS\Config\Config::create()
    ->setUsingLinter({{ linting ? 'true' : 'false' }})
    ->setUsingCache(true)
    ->level(Symfony\CS\FixerInterface::{{ level|upper }}_LEVEL)
{% if fixers_v1 is not empty or disabled_fixers_v1 is not empty %}
    ->fixers([
        {% if fixers_v1 is not empty %}'{{ (fixers_v1|join("',\n        '"))|raw }}',{% endif %}
        {% if disabled_fixers_v1 is not empty %}'-{{ (disabled_fixers_v1|join("',\n        '-"))|raw }}',{% endif %}
    ])
{% endif %}
    ->finder(
        Symfony\CS\Finder\DefaultFinder::create()
{% if finder.path is not empty %}
            ->in([__DIR__.'/{{ (finder.path|join("', __DIR__.'/"))|raw }}')
{% endif %}
{% for type in ['not_path', 'exclude', 'name', 'not_name', 'contains', 'not_contains', 'depth'] if finder[type] is not empty %}
            ->{{ type|camelize_method }}(['{{ (finder[type]|join("', '"))|raw }}'])
{% endfor %}
    )
;
{% endif %}

return $config;
{% endblock body %}
